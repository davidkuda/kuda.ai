create database kuda_ai;

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- CONTENT

CREATE TYPE content_type AS ENUM (
    'song',
    'blog',
    'til'
);

create table if not exists content (
    id integer generated by default as identity primary key,
    creation_date date,
    content_type content_type,
    content_id text,
    title text
);


-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- SONGBOOK

create schema songbook;

create table if not exists songbook.songs (
    id text primary key unique,
    artist text,
    name text,
    lyrics text,
    chords text,
    copyright text
);

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- BLOG

create schema blog;

create table if not exists blog.entries (
    id text primary key unique,
    category text,
    title text,
    body text,
    date_created text,
    modified_at text,
);

create table if not exists blog.tags (
    blog_id foreign key references(content.blog.id),
    tag text
);


-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- CV

create schema cv;

create table if not exists cv.portfolio ();

create table if not exists cv.work_experience ();

create table if not exists cv.education ();

create table if not exists cv.hobbies ();

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- BOOKSHELF

create schema bookshelf;

create table if not exists bookshelf.books ();

create schema til;

create table if not exists til.logs (
    date date,
    title text,
    teaser text,
    content text
);

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- AUTH

create schema auth;

CREATE TABLE auth.users (
    email VARCHAR(255) PRIMARY KEY,
    hashed_password CHAR(60) NOT NULL,
    created_at timestamp(0) with time zone NOT NULL DEFAULT NOW()
);
